@namespace Stasis.UI
@using Sandbox.UI
@using Sandbox
@using Stasis.Data
@using System
@using Sandbox.Services

@inherits Panel

<root>
    @{
        var scores = isGlobal ? global : local;
        if (scores != null && scores.Count != 0)
        {
            for (int i = scores.Count - 1; i >= 0; i--)
            {
                var sc = scores[i];
                var time = Sng.Inst.FormatTime(sc.Time);
                if (time != "4.499") 
                {
                <div class="list-item @(( i) % 2 == 0 ? "dark":"")">
                    <div class="count">@(scores.Count - i).</div>
                    @if(isGlobal) {
                        <div class="name">
                            @sc.DisplayName
                        </div>
                    }
                    else
                    {
                        <div class="name">
                            You
                        </div>
                    }
                    <img class="watch @(sc.Replay == null ? "hide":"")" onclick="@(x => { Watch(sc);})" src="img/play.png"/>
                    <div class="time">@(time)</div>
                </div>
                }
            }
        }
    }
</root>

@code
{
    LB parent { get; set; }
    MenuController MENUC { get; set; }
    List<Score> global{ get; set; }
    List<Score> local{ get; set; }
    bool isGlobal { get; set; }
    ViewReplay VIEWR;
    FileControl FILEC;
    public void Update(bool global)
    {
        isGlobal = global;
        if (global)
        {
            SetGlobal();
        }
        else
        {
            if (FILEC.GetScores(parent.map.Indent) is List<Score> l) local = l;
            if (local.Count == 0) return;
            if (local.First().Time < local.Last().Time){
                local.Sort((x, y) => y.Time.CompareTo(x.Time));
            }
        }
    }

    public void Watch(Score sc){
        if(parent.map.Indent != FILEC.currentMap.Indent)
        {
            FILEC.DownloadAndLoad(parent.map.Indent);
        }

        if(sc.Replay is Replay r)
        {
            VIEWR.Watch(r,MENUC.ChooseUI.GameObject);
        }
    }

    async void SetGlobal()
    {
        global = await LBControl.GetScores(parent.map.Indent, 20, parent.centerOnMe, parent.yourCountry);
        if (global.Count == 0) return;
        if (global.First().Time < global.Last().Time){
            global.Sort((x, y) => y.Time.CompareTo(x.Time));
        }
        /*
        long id = 12923012312;
        var s = new Score(){
            Time = 99999.99f, DisplayName = "Daiter", Replay = null, Date = DateTime.Now};
            global.Add(s);
            global.Add(s);
            global.Add(s);
            global.Add(s);
            global.Add(s);
            global.Add(s);
            global.Add(s);
        */
    }
    public ScoreList()
    {
        VIEWR = Sng.Inst.ViewC;
        FILEC = Sng.Inst.FileC;
        MENUC = Sng.Inst.MenuC;
        parent = MENUC.ChooseUI.leaderboard;
        parent.list = this;
        Update(true);
    }
    protected override int BuildHash() => System.HashCode.Combine(global, local, isGlobal);
}
