@namespace Stasis.UI
@using System
@using Stasis.Data
@using Stasis.UI
@inherits PanelComponent

<root>
    <div class="sub">
        <div class="panel">
            <div class="left">
                <div class="up">
                    <div class="tabrow">
                        <div class="tab infotab @(Info_LB_Local == 1?"active":"")"
                            onclick="@(() => {Info_LB_Local = 1;})">Info</div>
                        <div class="tab infotab @(Info_LB_Local == 2?"active":"")"
                            onclick="@(() => {
                                Info_LB_Local = 2;
                                UpdateLeaderboard();})">Leaderboard</div>
                        <div class="tab infotab @(Info_LB_Local == 3?"active":"")"
                            onclick="@(() => {
                                Info_LB_Local = 3;
                                UpdateLeaderboard();})">Local</div>
                    </div>
                </div>
                <div class="down">
                    <LB style="@($"display:" + (Info_LB_Local == 1 ? "none" : "flex") + ";")" />
                    <InfoCard style="@($"display:" + (Info_LB_Local != 1 ? "none" : "flex") + ";")" />
                </div>
            </div>
            <div class="right">
                <div class="up">
                    <div class="tabrow">
                        <div class="tab @(selectedType == "official" ? "active": "")"
                            onclick="@(() => {SelectType("official");})">Official</div>
                        <div class="tab @(selectedType == "featured" ? "active": "")"
                            onclick="@(() => {SelectType("featured");})">Featured</div>
                        <div class="tab @(selectedType == "community" ? "active": "")"
                            onclick="@(() => {SelectType("community");})">Community</div>
                    </div>
                </div>
                <div class="down">
                    <MapsList />
                </div>
            </div>
        </div>
        <div class="bk">
            <div class="back" onclick="@CloseMenu">
                <div class="text">Back</div>
                <div class="bg" onclick="@CloseMenu"></div>
            </div>
        </div>
    </div>
</root>

@code
{
    public MapsList list { get; set; }
    public InfoCard infCard { get; set; }
    public LB leaderboard { get; set; }
    public MenuController MenuC { get; set; }
    public List<MapData> Official { get; set; } = new List<MapData>();
    public List<MapData> Featured { get; set; } = new List<MapData>();
    public List<MapData> Community { get; set; } = new List<MapData>();
    public int Info_LB_Local{ get; set; } = 1;
    public int selectedMapId { get; set; } = 0;
    public string selectedType { get; set; } = "official";
    public bool copied = false;
    public void SelectType(string type)
    {
        selectedType = type;
        list.Update();
    }
    public void UpdateLeaderboard()
    {
        leaderboard.Update();
    }
    public void ChangeDisplayedMap(int i)
    {
        infCard.Update();
        selectedMapId = i;
        UpdateLeaderboard();
    }
    public List<MapData> GetList(string type)
    {
        return type == "official" ? Official : type == "featured" ? Featured : Community;
    }
    public void Copy()
    {
        copied = true;
        MenuC.Copy();
    }
    public MapData GetSelectedMap()
    {
        var log = "selectedMapId: " + selectedMapId + " " + "selectedType: " + selectedType;
        try
        {
        return GetList(selectedType)[selectedMapId];
        } catch {
            Log.Error("Selected error:\n" + log);
            return Official[0];
        }
    }
    void CloseMenu()
    {
        MenuC.CloseChooseMenu();
        copied = false;
    }
    protected override void OnAwake()
    {
        base.OnAwake();
        MenuC = GameObject.Parent.Components.Get<MenuController>();
    }

    protected override int BuildHash() => System.HashCode.Combine(Official, Featured, Community
    , selectedType, selectedMapId, Info_LB_Local);
}
