@using Sandbox;
@using Sandbox.UI;
@using Sandbox.Data;
@inherits PanelComponent

<root>
    <div class="sub">
        <div class="panel">
            @if(info != null)
            {
                <div class="mapinfo" style="@("background-image: url(" + info.Img + ")")">
                    <div class="header ">
                        <div class="text">
                            <div class="name">@info.Name</div>
                            @if(info.Scores.Count() != 0)
                            {
                                <div class="btime">Best Time: @Sng.Inst.FormatTime(info.Scores[0].Time)
                                </div>
                            }
                            else
                            {
                                <div class="btime">Not Played</div>
                            }
                            @if(info.Author != null)
                            {
                                <div class="author">By: @info.Author</div>
                            }
                            @if(info.DifficultyTier != null)
                            {
                                <div class="difficulty">Tier: @info.DifficultyTier</div>
                            }
                            
                        </div>
                        <div class="medal" style="@("background-image: url(img/medal"+(MenuC.GetMedal(info)).ToString()+".png);")"></div>
                    </div>
                    <div class="gradi"></div>
                    <div class="bot" >
                        <div class="play" 
                            onclick="@(x => Sng.Inst.File.DownloadAndLoad(info.Indent))">
                            play
                        </div>
                    </div>
                </div>
            }
            <div class="left">
                <div class="up">
                    Official
                </div>
                <div class="down">
                    @for (int i = 0; i < Official.Count(); i++)
                    {
                        var m = Official[i];
                        <div class="list-item dark" 
                        onclick="@(x => {ShowInfo(m, "official");})"
                        style="@("background-image: url(" + Official[i].Img + ")")">
                            <div class="time" >@(Official[i].Name.ToUpper())</div>
                        </div>
                    } 
                </div>
            </div>
            <div class="center">
                <div class="up">
                    Featured
            </div>
                <div class="down">
                </div>
            </div>
            <div class="right">
                <div class="up">
                    Community
                </div>
                <div class="down">
                    <div class="add" onclick="@MenuC.MapSelect">Find</div>
                </div>
                <div class="back" onclick="@CloseMenu">
                    <div class="text">Back</div>
                    <div class="bg" onclick="@CloseMenu"></div>
                </div>
            </div>
        </div>
    </div>
</root>

@code
{
    MenuController MenuC { get; set; }
    public List<MapData> Official { get; set; } = new List<MapData>();
    public List<MapData> Featured { get; set; }= new List<MapData>();
    public List<MapData> Community { get; set; }= new List<MapData>();
    public MapData info = null;

    public void ShowInfo(MapData i, string type)
    {
        var list = type == "official" ? Official : type == "featured" ? Featured : Community;
        info = i;
    }

    void CloseMenu()
    {
        MenuC.CloseChooseMenu();
        info=null;
    }
    protected override void OnAwake()
    {
        base.OnAwake();
        MenuC = GameObject.Parent.Components.Get<MenuController>();
    }

    protected override int BuildHash() => System.HashCode.Combine( Official, Featured, Community , info);
}